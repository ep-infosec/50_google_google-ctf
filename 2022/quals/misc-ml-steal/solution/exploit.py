# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sys
import gzip
import pickle
import numpy as np

# Import our fancy neural network
from exploit_mod import sample as logit

itos = np.array([10, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126])

def sample(x, weights):
    r = [(0, x)]
    for _ in range(2000):
        top = max(r)
        ptop, xtop = top

        if b'}' in bytes(xtop):
            return bytes(np.array(xtop,dtype=np.uint8))

        r = [x for x in r if x != top]
        print("%.3f"%ptop, b"".join(np.array(xtop,dtype=np.uint8)))

        l = np.log(logit(xtop, weights))

        for i,p in sorted(enumerate(l), key=lambda x: -x[1]):
            if bytes([itos[i]]) in b' {\n': continue
            x = np.array(np.append(xtop, itos[i]), dtype=np.uint64)
            r.append((ptop*.9 + p, x))



if __name__ == "__main__":
    # Load the model weights
    weights = np.frombuffer(gzip.open("weights.gz","rb").read(), dtype=np.float32)

    prompt = bytes("Alice Bobson's password is CTF{",'ascii')
    x = np.array(list(prompt), dtype=np.uint64)

    # Run neural network on the prompt
    print(sample(x, weights))
