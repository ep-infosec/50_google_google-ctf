#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import pwnlib
import getpass
import telnetlib

def do_check(tn):
  SHELLCODE = """
  cd /tmp
  cat << EOF | base64 -d | gunzip - | tar x
  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
  EOF
  cp ~/driver/Makefile .; make clean; make; insmod main.ko; mknod /dev/pcivault c 246 0; ./guest {}
  """.format(10000)
  tn.read_until(b"login: ")
  tn.write("root".encode('ascii') + b"\n")
  tn.read_until(b"Password: ")
  tn.write("password".encode('ascii') + b"\n")
  tn.read_until(b"\r\n")

  tn.write(SHELLCODE.encode('ascii'))

  tn.write("dd if=/dev/pcivault bs=1k count=1 | hexdump -C; shutdown -h now\n\n\n\n".encode("ascii"))

  tn.read_until(b"Resetting device\r\n")

  resp = tn.read_all().decode('ascii', 'ignore')

  expected = "Got 256 bytes back"
  if expected not in resp:
    print("Healthcheck failed")
    return True
  else:
    #print("Healthcheck OK")
    return False

def handle_pow(r):
    print(r.read_until(b'python3 '))
    print(r.read_until(b' solve '))
    challenge = r.read_until(b'\n').decode('ascii').strip()
    print(challenge)
    #p = pwnlib.tubes.process.process(['kctf_bypass_pow', challenge])
    #p = pwnlib.tubes.process.process(['kctf_bypass_pow', 'solve', challenge])
    #solution = p.readall().strip()
    #print(solution)
    solution = input('> ').strip().encode('utf-8')
    r.write(solution + b'\n')
    print(r.read_until(b'Correct\n'))


tn = telnetlib.Telnet('pcivault.2021.ctfcompetition.com', port=1337)

print(tn.read_until(b'== proof-of-work: '))
if tn.read_until(b"\n").startswith(b'enabled'):
    handle_pow(tn)

do_check(tn)

exit(0)
